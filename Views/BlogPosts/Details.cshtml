@using Microsoft.AspNetCore.Identity
@using ShadowBlog.Services.Interfaces
@using ShadowBlog.Services
@using ShadowBlog.Enums
@using ShadowBlog.Models

@inject IImageService _imageService

@inject BlogService _blogservice

@model BlogPost
@{
    ViewData["Title"] = "Details";
}


<!--=====================================-->
<!--=           Inner Banner Start      =-->
<!--=====================================-->
<section class="inner-page-banner bg-common" data-bg-image="media/figure/banner1.jpg">
    <div class="container">
        <div class="row">
            <div class="col-12">
                <div class="breadcrumbs-area">
                    <h1>@Model.Title</h1>
                    <ul>
                        <li>
                            <a asp-action="Index" asp-controller="Home">Home</a>
                        </li>
                        <li>
                        <a asp-action="Index" asp-controller="Blogs">Blogs</a>
                        </li>
                    </ul>
                </div>
            </div>
        </div>
    </div>
</section>
<!--=====================================-->
<!--=         Single Post Start        	=-->
<!--=====================================-->
<section class="inner-section">
    <div class="container">
        <div class="single-post-layout2">
            <div class="post-details">
                @if (User.IsInRole("Administrator"))
                {
                    <a asp-action="Edit" asp-controller="BlogPosts" asp-route-id="@Model.Id" class="btn-fill-md mb-4 justify-content-end">EDIT POST</a>
                }
                <div class="post-img">
                    <img src="@_imageService.DecodeImage(Model.ImageData, Model.ImageType)" width="540" height="250" alt="Post">
                </div>
                <div class="post-content">
                    <h2 class="post-title">
                        @Model.Title
                    </h2>
                    <div class="entry-meta">
                        <div class="row gutters-40 align-items-center">
                            <div class="col-lg-7 d-flex justify-content-lg-end justify-content-center">
                                <div class="post-meta-dark">
                                    <ul>
                                        <li class="post-date"><i class="flaticon-clock"></i>@Model.Created.ToString("dd MMMM,yyyy") </li>
                                        <li class="post-author text-left">
                                            <div class="author-icon bg-green">
                                                <i class="flaticon-user"></i>
                                            </div>
                                            <div class="author-content">
                                                <div class="item-text">Posted by</div>
                                                <div class="author-name"><a target="_blank " href="https://monaeleeportfolio.netlify.app">Monae Lee</a></div>
                                            </div>
                                        </li>
                                        <li class="meta-action"><i class="flaticon-heart"></i>2,350</li>
                                        <li class="meta-action"><i class="flaticon-comment-white-oval-bubble"></i>@Model.Comments.Count</li>
                                    </ul>
                                </div>
                            </div>
                            <div class="col-lg-5">
                                <div class="social-share">
                                    <label>Share</label>
                                    <ul>
                                        <li><a href="#" class="bg-fb"><i class="fab fa-facebook-f"></i></a></li>
                                        <li><a href="#" class="bg-twitter"><i class="fab fa-twitter"></i></a></li>
                                        <li><a href="#" class="bg-linked"><i class="fab fa-linkedin-in"></i></a></li>
                                        <li><a href="#" class="bg-google-plus"><i class="fab fa-google-plus-g"></i></a></li>
                                        <li><a href="#" class="bg-pinterst"><i class="fab fa-pinterest-square"></i></a></li>
                                    </ul>
                                </div>
                            </div>
                        </div>
                    </div>
                    <p>@Html.Raw(Model.Content)</p>

                    <ul class="related-tag">
                        @foreach (Tag tag in Model.Tags)
                        {
                            <li><a asp-action="TagIndex" asp-route-tag="@tag.Text">@tag.Text</a></li>
                        }
                    </ul>
                </div>
            </div>
            @if (User.Identity.IsAuthenticated)
            {
                <div class="comment-form mb-5">
                    <div class="heading-layout3">
                        <h3 class="heading-title-md">Leave a Comment</h3>
                    </div>
                    <form asp-controller="Comments" asp-action="Create">
                        <input type="hidden" name="BlogPostId" value="@Model.Id" />
                        <div class="row gutters-2">
                            <div class="col-lg-4 form-group border">
                                <textarea name="CommentBody" class="form-control" rows="5"></textarea>
                            </div>
                            <div class="col-lg-12 form-group ">
                                <button type="submit" class="submit-btn">SUBMIT NOW</button>
                            </div>
                        </div>
                    </form>
                </div>

                @*<div class="item-author">
                        <div class="media">
                            <div class="item-img">
                                <img src="~/media/post/author.jpg" alt="Author">
                            </div>
                            <div class="media-body">
                                <h3 class="item-title">Mark Willy</h3>
                                <div class="item-subtitle">CEO</div>
                                <p>Dorem Ipsum is simply dummy text of the printing and type area aawin gustry has been the industry's standardt.</p>
                                <ul class="item-social">
                                    <li><a href="#"><i class="fab fa-facebook-f"></i></a></li>
                                    <li><a href="#"><i class="fab fa-twitter"></i></a></li>
                                    <li><a href="#"><i class="fab fa-linkedin-in"></i></a></li>
                                    <li><a href="#"><i class="fab fa-google-plus-g"></i></a></li>
                                    <li><a href="#"><i class="fab fa-pinterest-square"></i></a></li>
                                </ul>
                            </div>
                        </div>
                    </div>*@
                <div class="post-comments">

                    <div class="heading-layout3" id="fragComment">
                        <h3 class="heading-title-md">@Model.Comments.Count() Comments</h3>
                    </div>
                    <div class="comment-box">
                        @foreach (Comment comment in Model.Comments.OrderByDescending(c => c.Created))
                        {
                            <div class="media">
                                @if (comment.BlogUser.ImageData is not null)
                                {
                                    <div class="item-img">
                                        <img src="@_imageService.DecodeImage(comment.BlogUser.ImageData, comment.BlogUser.ImageType)" width="32" height="32" alt="User Image">
                                    </div>
                                }
                                else
                                {
                                    <div class="item-img">
                                        <img src="~/img/defualtAccountImage.jpg" width="32" height="32" alt="User Image">
                                    </div>
                                }
                                @if (comment.Moderated is not null)
                                {
                                    <div class="media-body">
                                        <h4 class="item-title">Moderated by @comment.Moderator.FullName ,<span>@comment.Updated?.ToString("dd MMMM, yyyy")</span></h4>
                                        <p>@comment.ModeratedBody</p>
                                        <a data-UserCommentId="@comment.Id" data-toggle="modal" data-target="#editModal" class="reply-btn btnEdit">Edit</a>
                                        @if (User.IsInRole("Moderator"))
                                        {
                                            <button class="btn btn-danger px-3 btnModerate" data-UserCommentId="@comment.Id" data-toggle="modal" data-target="#moderateModal">Moderate</button>
                                        }

                                    </div>
                                }
                                else
                                {
                                    <div class="media-body">
                                        <h4 class="item-title">@comment.BlogUser.FullName ,<span>@comment.Created.ToString("dd MMMM, yyyy")</span></h4>
                                        <p>@comment.CommentBody</p>
                                        <a data-UserCommentId="@comment.Id" data-toggle="modal" data-target="#EditModal" class="reply-btn btnEdit">Edit</a>
                                        @if (User.IsInRole("Moderator"))
                                        {
                                            <button class="btn btn-danger px-3 btnModerate" data-UserCommentId="@comment.Id" data-toggle="modal" data-target="#moderateModal">Moderate</button>
                                        }

                                    </div>

                                }
                            </div>
                        }
                    </div>
                </div>
            }
            else
            {
                <div class="row mb-4">
                    <div class="col text-center">
                        <a class="btn btn-lg btn-dark w-75" asp-route-returnUrl="@Url.Action("Details", "BlogPosts",new {slug = Model.Slug }, null, null, "fragComment" )" asp-area="Identity" asp-page="/Account/Login">Login to add a comment!</a>
                    </div>
                </div>
            }
        </div>
    </div>
    </div>
    </div>
</section>

@*<----------------------------MODAL START-------------------->*@

<div class="modal fade" id="EditModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Editing Comment...</h5>
            </div>
            <div class="modal-body">
                <form asp-controller="Comments" asp-action="Edit">
                    <input type="hidden" id="ModalCommentId" name="CommentId" />
                    <input type="hidden" name="Slug" value="@Model.Slug" />
                    <textarea id="ModalCommentBody" name="Body" rows="5" class="w-100"></textarea>
                    <button class="btn btn-dark w-100" type="submit">Submit</button>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="moderateModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Moderating Comment...</h5>
            </div>
            <div class="modal-body">
                <form asp-controller="Comments" asp-action="Moderate">
                    <input type="hidden" id="ModerateModalCommentId" name="CommentId" />
                    <input type="hidden" name="Slug" value="@Model.Slug" />
                    <select name="ModerationType" asp-items="@Html.GetEnumSelectList<ModType>()"></select>
                    <textarea id="ModalModeratedBody" name="ModeratedBody" rows="5" class="w-100"></textarea>
                    <button class="btn btn-danger w-100" type="submit">Submit</button>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>
@*<----------------------------MODAL END-------------------->*@

@section Scripts
{
    <script>
        document.querySelectorAll("a.btnEdit").forEach(btn => {
            btn.addEventListener("click", function () {
                //Transfer the value of the button's data-UserCommentId to the Modals hidden input
                document.getElementById("ModalCommentId").value = this.getAttribute("data-UserCommentId");
                //I need to use JS to get the comment closest to the button i just clicked
                let closestComment = this.closest("comment-box").querySelector("p").textContent;
                document.getElementById("ModalCommentBody").textContent = closestComment;
            });
        });
        document.querySelectorAll("button.btnModerate").forEach(btn => {
            btn.addEventListener("click", function () {
                document.getElementById("ModerateModalCommentId").value = this.getAttribute('data-UserCommentId');
                let closestComment = this.closest("comment-box").querySelector("p").textContent;
                document.getElementById("ModalModeratedBody").textContent = closestComment;
            });
        });
    </script>
}